name: CI/CD TEXT/EXTRACT/PDF

on:
  push:
    branches:
      - main


env:
  APP_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/text_extract
  NGINX_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/nginx

jobs:

  copy:
    name: Copy files to DigitalOcean
    runs-on: ubuntu-latest
#    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v4.0.0

      - name: Configure ssh connection
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p ~/.ssh
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

      - name: Copied files on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp -o StrictHostKeyChecking=no \
            -r ./work_dir ./nginx ./docker-compose.prod.yml ./cleanup_docker_images.sh \
            root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/home/rodion/TEXT_EXTRACT_PDF
          
          ssh -o StrictHostKeyChecking=no \
            root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} \
            chown -R rodion:rodion /home/rodion/TEXT_EXTRACT_PDF

      - name: Bring up Docker containers on production server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} <<EOF
            cd /home/rodion/TEXT_EXTRACT_PDF
            echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
            docker pull ${{ env.APP_IMAGE }}
            docker pull ${{ env.NGINX_IMAGE }}
            source .env
            docker-compose -f docker-compose.prod.yml up -d 
          EOF


