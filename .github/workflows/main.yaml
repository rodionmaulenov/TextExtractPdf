name: CI/CD TEXT/EXTRACT/PDF

on:
  push:
    branches:
      - main

env:
  APP_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/text_extract
  NGINX_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/nginx


jobs:


#    build:
#      name: Build Docker Images
#      runs-on: ubuntu-latest
#      needs: test
#
#      steps:
#        - name: Checkout master
#          uses: actions/checkout@v1
#
#        - name: Make envfile
#          uses: SpicyPizza/create-envfile@v2.0
#          with:
#            file_name: .env
#            envkey_DEBUG: ${{ secrets.DEBUG }}
#            envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
#            envkey_ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
#            envkey_CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
#            envkey_SQL_NAME: ${{ secrets.SQL_DATABASE }}
#            envkey_SQL_USER: ${{ secrets.SQL_USER }}
#            envkey_SQL_HOST: ${{ secrets.SQL_HOST }}
#            envkey_SQL_PORT: ${{ secrets.SQL_PORT }}
#            envkey_SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
#            envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#            envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#            envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#            envkey_APP_IMAGE: ${{ env.APP_IMAGE }}
#            envkey_NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
#
#        - name: Build images
#          run: |
#            docker-compose -f docker-compose.cicd.yml build
#
#        - name: Log in to GitHub Packages
#          run: echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
#
#        - name: Push images
#          run: |
#            docker push ${{ env.APP_IMAGE }}
#            docker push ${{ env.NGINX_IMAGE }}

    copy:
      name: Copy files to DigitalOcean
      runs-on: ubuntu-latest
##      needs: build
      steps:
        - name: Checkout master
          uses: actions/checkout@v1

        - name: configure ssh connection
          env:
              SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
              mkdir -p ~/.ssh
              ssh-agent -a $SSH_AUTH_SOCK > /dev/null
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"

        - name: Copied files on DigitalOcean
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          run: |
            scp -o StrictHostKeyChecking=no \
              -r ./work_dir ./nginx ./docker-compose.prod.yml \
              root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/home/rodion/TEXT_EXTRACT_PDF

    deploy:
        name: Deploy to DigitalOcean
        runs-on: ubuntu-latest
        needs: copy

        steps:
          - name: bring up docker containers on production server
            uses: appleboy/ssh-action@v1.0.0
            with:
              host: ${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}
              username: root
              key: ${{ secrets.PRIVATE_KEY }}
              script: |
                cd /home/rodion/TEXT_EXTRACT_PDF

                source .env

                echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin

                docker pull ${{ env.APP_IMAGE }}
                docker pull ${{ env.NGINX_IMAGE }}

                docker-compose -f docker-compose.prod.yml up -d

                docker image prune -a -f









