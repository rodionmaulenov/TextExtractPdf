name: CI/CD TEXT/EXTRACT/PDF

on:
  push:
    branches:
      - main

env:
  APP_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/text_extract
  NGINX_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/nginx
  POSTGRES_IMAGE: ghcr.io/${{ secrets.REPOSITORY_GITHUB }}/postgres


jobs:

    build:
      name: Build Docker Images
      runs-on: ubuntu-latest
#      needs: test

      steps:
        - name: Checkout master
          uses: actions/checkout@v1

        - name: Make envfile
          uses: SpicyPizza/create-envfile@v2.0
          with:
            file_name: .env
            envkey_DEBUG: ${{ secrets.DEBUG }}
            envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
            envkey_ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
            envkey_CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
            envkey_SQL_NAME: ${{ secrets.SQL_DATABASE }}
            envkey_SQL_USER: ${{ secrets.SQL_USER }}
            envkey_SQL_HOST: ${{ secrets.SQL_HOST }}
            envkey_SQL_PORT: ${{ secrets.SQL_PORT }}
            envkey_SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
            envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            envkey_APP_IMAGE: ${{ env.APP_IMAGE }}
            envkey_NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
            envkey_POSTGRES_IMAGE: ${{ env.POSTGRES_IMAGE }}


#        - name: Set environment variables
#          run: |
#            echo "APP_IMAGE=$(echo ${{ env.APP_IMAGE }} )" >> $GITHUB_ENV
#            echo "ACME_IMAGE=$(echo ${{ env.NGINX_IMAGE }} )" >> $GITHUB_ENV
#            echo "POSTGRES_IMAGE=$(echo ${{ env.POSTGRES_IMAGE }} )" >> $GITHUB_ENV

        - name: Build images
          run: |
            docker-compose -f docker-compose.cicd.yml build

        - name: Log in to GitHub Packages
          run: echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin

        - name: Push images
          run: |
            docker push ${{ env.APP_IMAGE }}
            docker push ${{ env.NGINX_IMAGE }}
            docker push ${{ env.POSTGRES_IMAGE }}

#    deploy:
#      name: Copy file to DigitalOcean
#      runs-on: ubuntu-latest
#      needs: build
#      steps:
#        - name: Checkout master
#          uses: actions/checkout@v1
#
#        - name: Make envfile
#          uses: SpicyPizza/create-envfile@v2.0
#          with:
#            file_name: .env
#            envkey_DEBUG: ${{ secrets.DEBUG }}
#            envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
#            envkey_ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
#            envkey_CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
#            envkey_VIRTUAL_HOST: ${{ secrets.VIRTUAL_HOST }}
#            envkey_LETSENCRYPT_HOST: ${{ secrets.LETSENCRYPT_HOST }}
#            envkey_SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
#            envkey_SQL_USER: ${{ secrets.SQL_USER }}
#            envkey_SQL_HOST: ${{ secrets.SQL_HOST }}
#            envkey_SQL_PORT: ${{ secrets.SQL_PORT }}
#            envkey_SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
#            envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#            envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#            envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#            envkey_DEFAULT_EMAIL: ${{ secrets.DEFAULT_EMAIL }}
#            envkey_NGINX_PROXY_CONTAINER: ${{ secrets.NGINX_PROXY_CONTAINER }}
#            envkey_APP_IMAGE: ${{ env.APP_IMAGE }}
#            envkey_NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
#            envkey_NAMESPACE: ${{ secrets.NAMESPACE }}
#            envkey_PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
#
#
#        - name: SSH into DigitalOcean and run container
#          id: ssh
#          uses: appleboy/scp-action@v0.1.4
#          with:
#            host: ${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}
#            username: root
#            key: ${{ secrets.PRIVATE_KEY }}
#            source: "./work_dir ./docker-compose.prod.yml, ./docker-compose.cicd.yml, ./nginx"
#            target: /home/rodion/TEXT_EXTRACT_PDF

#    deploy2:
#        name: Deploy to DigitalOcean
#        runs-on: ubuntu-latest
#        needs: deploy
#
#        steps:
#          - name: executing remote ssh commands using password
#            uses: appleboy/ssh-action@v1.0.0
#            with:
#              host: ${{ env.DIGITAL_OCEAN_IP_ADDRESS }}
#              username: root
#              key: ${{ env.PRIVATE_KEY }}
#              script: |
#                cd /home/rodion/TEXT_EXTRACT_PDF
#
#                source .env
#                echo ${{ env.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u ${{ env.NAMESPACE }} --password-stdin
#
#                docker pull ghcr.io/rodionmaulenov/textextractpdf/text_extract
#                docker pull ghcr.io/rodionmaulenov/textextractpdf/nginx
#                docker pull ghcr.io/rodionmaulenov/textextractpdf/acme
#                docker pull ghcr.io/rodionmaulenov/textextractpdf/postgres
#
#                docker-compose -f docker-compose.prod.yml up -d
#
#                docker image prune -a -f
#








