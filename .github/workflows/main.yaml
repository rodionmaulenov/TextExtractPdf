name: CI/CD TEXT/EXTRACT/PDF

on:
  push:
    branches:
      - main

env:
  APP_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/text_extract
  NGINX_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/nginx
  ACME_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/acme
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  DIGITAL_OCEAN_IP_ADDRESS: ${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}


jobs:

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout master
        uses: actions/checkout@v1

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          file_name: .env
          envkey_DEBUG: ${{ secrets.DEBUG }}
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          envkey_CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
          envkey_VIRTUAL_HOST: ${{ secrets.VIRTUAL_HOST }}
          envkey_LETSENCRYPT_HOST: ${{ secrets.LETSENCRYPT_HOST }}
          envkey_SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
          envkey_SQL_USER: ${{ secrets.SQL_USER }}
          envkey_SQL_HOST: ${{ secrets.SQL_HOST }}
          envkey_SQL_PORT: ${{ secrets.SQL_PORT }}
          envkey_SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_DEFAULT_EMAIL: ${{ secrets.DEFAULT_EMAIL }}
          envkey_NGINX_PROXY_CONTAINER: ${{ secrets.NGINX_PROXY_CONTAINER }}
          envkey_APP_IMAGE: ${{ env.APP_IMAGE }}
          envkey_NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          envkey_ACME_IMAGE: ${{ env.ACME_IMAGE }}
          envkey_NAMESPACE: ${{ secrets.NAMESPACE }}
          envkey_PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}


      - name: SSH into DigitalOcean
        id: ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DIGITAL_OCEAN_IP_ADDRESS }}
          username: root
          privateKey: ${{ env.PRIVATE_KEY }}
          source: "./deploy.sh"
          target: /home/rodion/TEXT_EXTRACT_PDF

#      - name: SSH into DigitalOcean
#        id: ssh
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ env.DIGITAL_OCEAN_IP_ADDRESS }}
#          username: root
#          privateKey: ${{ env.PRIVATE_KEY }}
#          script: |
#            scp -o StrictHostKeyChecking=no \
#              -i ${{ env.PRIVATE_KEY }} \
#              .env \
#              deploy.sh \
#              ./acme_companion \
#              ./nginx \
#              ./docker-compose.prod.yml \
#              root@${{ env.DIGITAL_OCEAN_IP_ADDRESS }}:/home/rodion/TEXT_EXTRACT_PDF
#
#            chmod +x /home/rodion/TEXT_EXTRACT_PDF/deploy.sh
#            /home/rodion/TEXT_EXTRACT_PDF/deploy.sh

      - name: Check Deployment Status
        run: |
          echo "Exit status: ${{ steps.ssh.outputs.status }}"
        if: steps.ssh.outputs.status == 0




