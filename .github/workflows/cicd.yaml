name: Continuous Integration and Delivery

on:
  workflow_run:
    workflows:
      - "Django Tests"
    types:
      - completed
env:
  APP_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/extract_text
  NGINX_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/nginx_proxy
  ACME_IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/acme_companion


jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Add environment variables to .env
        run: |
          echo DEBUG={{ secrets.DEBUG }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
          echo CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }} >> .env
          echo VIRTUAL_HOST=${{ secrets.VIRTUAL_HOST }} >> .env
          echo VIRTUAL_PORT=${{ secrets.VIRTUAL_PORT }} >> .env
          echo LETSENCRYPT_HOST=${{ secrets.LETSENCRYPT_HOST }} >> .env
          echo SQL_DATABASE=${{ secrets.SQL_DATABASE }} >> .env
          echo SQL_USER=${{ secrets.SQL_USER }} >> .env
          echo SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env
          echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
          echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo DEFAULT_EMAIL=${{ secrets.DEFAULT_EMAIL }} >> .env
          echo NGINX_PROXY_CONTAINER=${{ secrets.NGINX_PROXY_CONTAINER }} >> .env

      - name: Set environment variables
        run: |
          echo "APP_IMAGE=$(echo ${{ env.APP_IMAGE }} )" >> $GITHUB_ENV
          echo "ACME_IMAGE=$(echo ${{ env.NGINX_IMAGE }} )" >> $GITHUB_ENV
          echo "NGINX_IMAGE=$(echo ${{ env.ACME_IMAGE }} )" >> $GITHUB_ENV

      - name: Log in to GitHub Packages
        run: echo ${PERSONAL_ACCESS_TOKEN} | docker login ghcr.io -u ${{ secrets.NAMESPACE }} --password-stdin
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Pull images
        run: |
          docker pull ${{ env.APP_IMAGE }} || true
          docker pull ${{ env.NGINX_IMAGE }} || true
          docker pull ${{ env.ACME_IMAGE }} || true

      - name: Build images
        run: |
          docker-compose -f docker-compose.cicd.yml build

      - name: Push images
        run: |
          docker push ${{ env.APP_IMAGE }}
          docker push ${{ env.NGINX_IMAGE }}
          docker push ${{ env.ACME_IMAGE }}
