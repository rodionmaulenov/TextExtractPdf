version: '3.9'

services:

  db_postgres:
    container_name: postgresql_db
    image: postgres:latest
    volumes:
      - ./persistentdata/db:/var/lib/postgresql/data
    env_file:
      - .env


  extract_text:
    container_name: extract_text
    build:
      context: ./work_dir
      dockerfile: Dockerfileprod
    expose:
      - '8000'
    volumes:
      - ./persistentdata/static:/home/app/web/static
      - ./persistentdata/media:/home/app/web/media
    env_file:
      - .env
    depends_on:
      - db_postgres
    command: >
      bash -c "
              ./manage.py collectstatic --noinput &&
              ./manage.py migrate &&
              gunicorn -b 0.0.0.0:8000 home_api.wsgi:application
            "

  nginx_proxy:
    container_name: nginx_proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot
      - ./persistentdata/static:/home/app/web/static
      - ./persistentdata/media:/home/app/web/media
    depends_on:
    - extract_text

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./persistentdata/certbot/conf:/etc/letsencrypt
      - ./persistentdata/certbot/www:/var/www/certbot
