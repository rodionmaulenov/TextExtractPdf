#FROM python:3.11.4-slim-buster as builder
#
#WORKDIR /usr/src/app
#
#ENV PYTHONDONTWRITEBYTECODE 1
#ENV PYTHONUNBUFFERED 1
#
#RUN apt-get update && \
#    apt-get install -y --no-install-recommends gcc
#
#RUN pip install --upgrade pip
#COPY . /usr/src/app/
#
#COPY ./requirements.txt .
#RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt
#
#
#FROM python:3.11.4-slim-buster
#
#RUN mkdir -p /home/app
#
#ENV HOME=/home/app
#ENV APP_HOME=/home/app/web
#RUN mkdir $APP_HOME
#WORKDIR $APP_HOME
#
#RUN apt-get update && apt-get install -y --no-install-recommends netcat default-jre
#COPY --from=builder /usr/src/app/wheels /wheels
#COPY --from=builder /usr/src/app/requirements.txt .
#RUN pip install --upgrade pip
#RUN pip install --no-cache /wheels/*
#
#COPY . $APP_HOME


FROM python:3.9.18-alpine
ENV PYTHONUNBUFFERED 1
RUN mkdir /code
WORKDIR /code
COPY . .

RUN apk add --no-cache --virtual .build-deps \
    ca-certificates gcc postgresql-dev linux-headers musl-dev \
    libffi-dev jpeg-dev zlib-dev \
    && pip install -r requirements.txt \
    && find /usr/local \
        \( -type d -a -name test -o -name tests \) \
        -o \( -type f -a -name '*.pyc' -o -name '*.pyo' \) \
        -exec rm -rf '{}' + \
    && runDeps="$( \
        scanelf --needed --nobanner --recursive /usr/local \
                | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
                | sort -u \
                | xargs -r apk info --installed \
                | sort -u \
    )" \
    && apk add --virtual .rundeps $runDeps \
    && apk del .build-deps




