#      - name: Copy Files to DigitalOcean
#        run: |
#          scp -o StrictHostKeyChecking=no \
#            .env \
#            deploy.sh \
#            ./acme_companion \
#            ./nginx \
#            ./docker-compose.prod.yml \
#            root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/home/rodion/TEXT_EXTRACT_PDF
#

#      - name: Build and deploy images on DigitalOcean
#        env:
#          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
#        run: |
#          scp -T -o StrictHostKeyChecking=no -r ./.env \
#                ./work_dir \
#                ./acme_companion \
#                ./nginx \
#              ./docker-compose.prod.yml \
#              root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/home/rodion/TEXT_EXTRACT_PDF
#          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
#              cd /home/rodion/TEXT_EXTRACT_PDF
#              source .env
#              docker login ghcr.io -u $NAMESPACE -p $PERSONAL_ACCESS_TOKEN
#              docker pull $APP_IMAGE
#              docker pull $NGINX_IMAGE
#              docker pull $env.ACME_IMAGE
#              docker-compose -f docker-compose.prod.yml up -d
#          ENDSSH


#  test:
#    name: Run Tests
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ./work_dir
#
#    env:
#      SECRET_KEY: ${{ secrets.SECRET_KEY }}
#      CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
#      SQL_NAME: ${{ secrets.TEST_DB_NAME }}
#      SQL_USER: ${{ secrets.TEST_DB_USER }}
#      SQL_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
#      SQL_HOST: ${{ secrets.TEST_DB_HOST }}
#      SQL_PORT: ${{ secrets.TEST_DB_PORT }}
#
#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_USER: ${{ env.SQL_USER }}
#          POSTGRES_PASSWORD: ${{ env.SQL_PASSWORD }}
#          POSTGRES_DB: ${{ env.SQL_NAME }}
#        ports:
#          - 5432:5432
#        options:
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.11
#
#      - name: Install Dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run Tests
#        run: |
#          python manage.py test